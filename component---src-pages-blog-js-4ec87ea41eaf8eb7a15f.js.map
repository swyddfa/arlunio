{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/menu-link.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["PostLink","_ref","post","react_default","a","createElement","style","display","justifyContent","alignItems","marginBottom","borderBottom","gatsby_browser_entry","class","textDecoration","fontSize","to","frontmatter","path","title","date","excerpt","BlogIndex","Posts","data","allMarkdownRemark","edges","map","edge","key","node","id","layout","seo","__webpack_require__","d","__webpack_exports__","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","MenuLink","padding","color","className","Header","siteTitle","margin","Layout","children","_856328897","Fragment","Helmet_default","href","rel","header","textAlign","Date","getFullYear"],"mappings":"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","file":"component---src-pages-blog-js-4ec87ea41eaf8eb7a15f.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default function PostLink({ post }) {\n    return (\n        <div>\n            <div style={{ display: `flex`, justifyContent: `space-between`, alignItems: `flex-end`, marginBottom: `1.45rem`, borderBottom: `solid 1px #ddd` }}>\n                <Link class=\"title\" style={{ textDecoration: `none`, fontSize: `1.5rem` }} to={post.frontmatter.path}>\n                    {post.frontmatter.title}\n                </Link>\n                <small><em>{post.frontmatter.date}</em></small>\n            </div>\n            <div>\n                {post.excerpt}\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport PostLink from '../components/post-link'\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function BlogIndex({ data: { allMarkdownRemark: { edges }, }, }) {\n\n  const Posts = edges\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\n\n  return (\n    <Layout>\n      <SEO title=\"Development Blog\" />\n      <h1>Development Blog</h1>\n      <div>{Posts}</div>\n    </Layout >\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date]}) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n     />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default function MenuLink({ title, path }) {\n    return (\n        <div style={{ padding: `1rem` }}>\n            <Link style={{ color: `white`, textDecoration: `none`, fontSize: `1.45rem` }}\n                className=\"title\" to={path}>\n                {title}\n            </Link>\n        </div>\n    )\n}","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport MenuLink from \"./menu-link\";\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"site-title\">\n    <div\n      style={{\n        margin: `0`,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n    <div>\n      <MenuLink path=\"/blog\" title=\"Blog\" />\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport Helmet from 'react-helmet'\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Helmet>\n         <link href=\"https://fonts.googleapis.com/css?family=Caveat|Open+Sans:300&display=swap\" rel=\"stylesheet\" />\n      </Helmet>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div className=\"site-content\">\n        <main style={{ padding: `1rem` }}>{children}</main>\n        <footer\n          style={{\n            textAlign: `center`,\n            color: `#aaa`\n          }}>\n          <small>\n            © {new Date().getFullYear()} Swyddfa Developers, Built with {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </small>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}