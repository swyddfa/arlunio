# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- develop

jobs:
- job: 'Test'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      lint:
        python.version: '3.7'
        tox.env: 'lint'
      py36:
        python.version: '3.6'
        tox.env: 'py36'
      py37:
        python.version: '3.7'
        tox.env: 'py37'
      docs:
        python.version: '3.7'
        tox.env: 'docs'
      pkg:
        python.version: '3.7'
        tox.env: 'pkg'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install tox
    displayName: 'Install Tox'

  - script: |
      tox -e $(tox.env)
    displayName: 'Tox $(tox.env)'

  - script: |
      pip install codecov
      codecov -t "${CODECOV_TOKEN}"
    env:
      CODECOV_TOKEN: $(codecov.token)
    displayName: 'Report Coverage'
    condition: |
      or(
        eq(variables['tox.env'], 'py36'),
        eq(variables['tox.env'], 'py37')
      )


- job: 'Deploy'
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: 'Test'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
    displayName: 'Use Python 3.7'

  - script: |
      python -m pip install --upgrade pip twine
      pip install tox
    displayName: 'Install Tox'

  - script: |
      sed -i 's/"\(.*\)"/"\1dev$(Build.BuildId)"/' stylo/_version.py
      cat stylo/_version.py
    displayName: 'Set Dev Snapshot'
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')

  - script: |
      tox -e pkg
      ls dist/
    displayName: 'Build Package'

  - task: TwineAuthenticate@0
    inputs:
      externalFeeds: 'stylo - PyPi Test'
    condition: |
      and(
        ne(variables['Build.Reason'], 'PullRequest'),
        ne(variables['Build.SourceBranch'], 'refs/heads/master')
      )

  - script: |
      twine upload -r test-pypi --config-file $(PYPIRC_PATH) dist/*
    displayName: 'Publish Dev Snapshot'
    condition: |
      and(
        ne(variables['Build.Reason'], 'PullRequest'),
        ne(variables['Build.SourceBranch'], 'refs/heads/master')
      )

  - task: TwineAuthenticate@0
    inputs:
      externalFeeds: 'stylo - PyPi'
    condition: |
      and(
        ne(variables['Build.Reason'], 'PullRequest'),
        eq(variables['Build.SourceBranch'], 'refs/heads/master')
      )

  - script: |
      twine upload -r pypi --config-file $(PYPIRC_PATH) dist/*
    displayName: 'Publish'
    condition: |
      and(
        ne(variables['Build.Reason'], 'PullRequest'),
        eq(variables['Build.SourceBranch'], 'refs/heads/master')
      )