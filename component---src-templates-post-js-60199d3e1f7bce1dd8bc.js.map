{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/menu-link.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","paeQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","className","style","textAlign","marginBottom","color","date","dangerouslySetInnerHTML","__html","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","MenuLink","path","react_default","padding","gatsby_browser_entry","textDecoration","fontSize","to","Header","siteTitle","margin","Layout","children","_856328897","Fragment","Helmet_default","href","rel","header","Date","getFullYear"],"mappings":"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","file":"component---src-templates-post-js-60199d3e1f7bce1dd8bc.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"katex/dist/katex.min.css\"\n\nexport default function Template({ data }) {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n\n  return (\n    <Layout>\n      <SEO title={ frontmatter.title }/>\n      <div className=\"blog-post\">\n        <h1 style={{ textAlign: `center`, marginBottom: `0` }}>{frontmatter.title}</h1>\n        <h6 style={{ color: `#aaa`, textAlign: `center` }}>--{frontmatter.date} --</h6>\n\n        <div className=\"blog-post-content\" dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const paeQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: {path: {eq: $path} }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n     />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default function MenuLink({ title, path }) {\n    return (\n        <div style={{ padding: `1rem` }}>\n            <Link style={{ color: `white`, textDecoration: `none`, fontSize: `1.45rem` }}\n                className=\"title\" to={path}>\n                {title}\n            </Link>\n        </div>\n    )\n}","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport MenuLink from \"./menu-link\";\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"site-title\">\n    <div\n      style={{\n        margin: `0`,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n    <div>\n      <MenuLink path=\"/blog\" title=\"Blog\" />\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport Helmet from 'react-helmet'\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Helmet>\n         <link href=\"https://fonts.googleapis.com/css?family=Caveat|Open+Sans:300&display=swap\" rel=\"stylesheet\" />\n      </Helmet>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div className=\"site-content\">\n        <main style={{ padding: `1rem` }}>{children}</main>\n        <footer\n          style={{\n            textAlign: `center`,\n            color: `#aaa`\n          }}>\n          <small>\n            © {new Date().getFullYear()} Swyddfa Developers, Built with {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </small>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}