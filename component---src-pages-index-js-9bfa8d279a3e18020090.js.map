{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/menu-link.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Index","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","a","createElement","title","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","MenuLink","path","react_default","style","padding","gatsby_browser_entry","color","textDecoration","fontSize","className","to","Header","siteTitle","margin","Layout","children","_856328897","Fragment","Helmet_default","href","rel","header","textAlign","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-9bfa8d279a3e18020090.js","sourcesContent":["import React from 'react'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function Index() {\n    return (\n        <Layout>\n            <SEO title=\"Home\" />\n            <p>Hi there.</p>\n        </Layout >\n    )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n     />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default function MenuLink({ title, path }) {\n    return (\n        <div style={{ padding: `1rem` }}>\n            <Link style={{ color: `white`, textDecoration: `none`, fontSize: `1.45rem` }}\n                className=\"title\" to={path}>\n                {title}\n            </Link>\n        </div>\n    )\n}","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport MenuLink from \"./menu-link\";\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"site-title\">\n    <div\n      style={{\n        margin: `0`,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n    <div>\n      <MenuLink path=\"/blog\" title=\"Blog\" />\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport Helmet from 'react-helmet'\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Helmet>\n         <link href=\"https://fonts.googleapis.com/css?family=Caveat|Open+Sans:300&display=swap\" rel=\"stylesheet\" />\n      </Helmet>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div className=\"site-content\">\n        <main style={{ padding: `1rem` }}>{children}</main>\n        <footer\n          style={{\n            textAlign: `center`,\n            color: `#aaa`\n          }}>\n          <small>\n            © {new Date().getFullYear()} Swyddfa Developers, Built with {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </small>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}